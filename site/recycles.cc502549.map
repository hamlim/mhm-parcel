{"version":3,"sources":["pages/recycles.js"],"names":["blink","keyframes","P","Main","Toggle","state","toggle","setState","on","React","Component","props","children","log"],"mappings":"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","file":"recycles.cc502549.map","sourceRoot":"../src","sourcesContent":["import React, { Fragment } from 'react'\nimport Container from '../components/container.js'\nimport styled, { keyframes } from 'react-emotion'\nimport { Flex, Box } from 'grid-emotion'\nimport hljs from 'highlight.js'\nimport Code from '../components/code.js'\nimport Button from '@atlaskit/button'\n\nimport {\n  ComponentDidMount,\n  ComponentWillUnmount,\n} from 'recycles'\n\nconst blink = keyframes`\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n`\n\nconst P = styled('p')`\n  margin: 1rem 0;\n`\nconst Main = styled('main')`\n  font-size: 1.3rem;\n  margin-bottom: 3rem;\n`\n\nclass Toggle extends React.Component {\n  state = {\n    on: false,\n  }\n  toggle = () => this.setState(({ on }) => ({ on: !on }))\n  render() {\n    return (\n      <Fragment>\n        <Button appearance=\"primary\" onClick={this.toggle}>\n          {this.state.on ? 'Unmount' : 'Mount'}\n        </Button>\n        {this.state.on ? this.props.children : null}\n      </Fragment>\n    )\n  }\n}\n\nexport default () => (\n  <Container>\n    <Main>\n      <header>\n        <h2>\n          <code>Recycles</code>\n        </h2>\n      </header>\n      <section>\n        <P>\n          Recycles is a collection of render-prop components\n          that expose hooks into the component lifecycle\n          methods of a React Component.\n        </P>\n        <P>The following components are exported:</P>\n        <ul>\n          <li>\n            <code>ComponentDidMount</code>\n          </li>\n          <li>\n            <code>ComponentDidUpdate</code>\n          </li>\n          <li>\n            <code>ComponentDidCatch</code>\n            <sup>*</sup>\n          </li>\n          <li>\n            <code>ComponentWillUnmount</code>\n          </li>\n        </ul>\n        <P>\n          Below is a simple toggle component which will\n          toggle mounting/unmounting a component. The first\n          example is using a{' '}\n          <code>{`<ComponentDidMount>`}</code> component.\n          Check the console in your browser to see logging\n          that happens during mount.\n        </P>\n        <Toggle>\n          <ComponentDidMount\n            callback={() => {\n              console.log('Mounted!')\n            }}\n          >\n            {() => <marquee>I have mounted!</marquee>}\n          </ComponentDidMount>\n        </Toggle>\n        <P>\n          The next example is using the{' '}\n          <code>{`<ComponentWillUnmount>`}</code> component.\n        </P>\n        <Toggle>\n          <ComponentWillUnmount\n            callback={() => {\n              console.log('I have unmounted!')\n            }}\n          >\n            {() => (\n              <div>\n                I will log a message when I unmount!\n              </div>\n            )}\n          </ComponentWillUnmount>\n        </Toggle>\n      </section>\n      <section>\n        <P>\n          By default these components only expose two props,\n          the first of which is <code>children</code>, which\n          is a function called during the lifecycle. If you\n          only provide <code>children</code> then the\n          compoennt will return null.\n        </P>\n        <P>\n          If you do want to have the component render\n          something and also use the lifecycle, then you can\n          provide a <code>callback</code> prop. When this is\n          provided only the callback will be called during\n          the lifecycle method, and then in render the\n          component will return the result of evaluating\n          children.\n        </P>\n        <P>\n          <code>{`<ComponentDidCatch>`}</code> is a special\n          case component because of its behavior with\n          catching errors. If you are looking for a generic\n          error boundary component that can handle the\n          logging inside the callback for you, check out{' '}\n          <a href=\"https://github.com/hamlim/react-error-boundary\">\n            React-Error-Boundary\n          </a>. If you would just like to use the component\n          from recycles, then you should always provide a\n          callback and a children prop. This is because the{' '}\n          <code>componentDidCatch</code> lifecycle will only\n          be invoked when the components children throw and\n          error, not the components siblings.\n        </P>\n        <P>\n          Check out the rest of the library on github{' '}\n          <a href=\"https://github.com/hamlim/recycles\">\n            here\n          </a>\n        </P>\n      </section>\n    </Main>\n  </Container>\n)\n"]}